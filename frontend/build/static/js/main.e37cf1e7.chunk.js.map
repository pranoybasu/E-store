{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userAction.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","document","location","href","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deletetUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","countInSock","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e37cf1e7.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\n\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\n\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPD_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPD_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDAT_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'; \r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderDeliverReducer, orderListReducer } from './reducers/orderReducers';\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import {    PRODUCT_LIST_REQUEST, \r\n            PRODUCT_LIST_SUCCESS, \r\n            PRODUCT_LIST_FAIL, \r\n            PRODUCT_DETAILS_REQUEST, \r\n            PRODUCT_DETAILS_SUCCESS, \r\n            PRODUCT_DETAILS_FAIL, \r\n            PRODUCT_DELETE_REQUEST,\r\n            PRODUCT_DELETE_SUCCESS,\r\n            PRODUCT_DELETE_FAIL,\r\n            PRODUCT_CREATE_REQUEST,\r\n            PRODUCT_CREATE_SUCCESS,\r\n            PRODUCT_CREATE_FAIL,\r\n            PRODUCT_CREATE_RESET,\r\n            PRODUCT_UPDATE_REQUEST,\r\n            PRODUCT_UPDATE_SUCCESS,\r\n            PRODUCT_UPDATE_FAIL,\r\n            PRODUCT_UPDATE_RESET,\r\n            PRODUCT_CREATE_REVIEW_REQUEST,\r\n            PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            PRODUCT_CREATE_REVIEW_FAIL,\r\n            PRODUCT_CREATE_REVIEW_RESET,\r\n            PRODUCT_TOP_REQUEST,\r\n            PRODUCT_TOP_SUCCESS,\r\n            PRODUCT_TOP_FAIL} from '../constants/productConstants'\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n          return {\r\n            loading: false,\r\n            products: action.payload.products,\r\n            pages: action.payload.pages,\r\n            page: action.payload.page,\r\n          }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_CREATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_UPDATE_SUCCESS:\r\n        return { loading: false, success: true, product: action.payload }\r\n      case PRODUCT_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_UPDATE_RESET:\r\n        return { product: {} }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_CREATE_REVIEW_REQUEST:\r\n        return { loading: true }\r\n      case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case PRODUCT_CREATE_REVIEW_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case PRODUCT_CREATE_REVIEW_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n      case PRODUCT_TOP_REQUEST:\r\n        return { loading: true, products: [] }\r\n      case PRODUCT_TOP_SUCCESS:\r\n        return { loading: false, products: action.payload }\r\n      case PRODUCT_TOP_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = ( state = { cartItems: [], shippingAddress: {} }, action ) => {\r\n    switch(action.type){\r\n\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state, \r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        \r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }\r\n        case CART_CLEAR_ITEMS:\r\n                return {\r\n                      ...state,\r\n                      cartItems: [],\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateProfileReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n      case USER_LIST_REQUEST:\r\n        return { loading: true }\r\n      case USER_LIST_SUCCESS:\r\n        return { loading: false, users: action.payload }\r\n      case USER_LIST_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_LIST_RESET:\r\n          return { users: []}\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const userDeleteReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n      case USER_DELETE_REQUEST:\r\n        return { loading: true }\r\n      case USER_DELETE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_DELETE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n\r\n  export const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n      case USER_UPDATE_REQUEST:\r\n        return { loading: true }\r\n      case USER_UPDATE_SUCCESS:\r\n        return { loading: false, success: true }\r\n      case USER_UPDATE_FAIL:\r\n        return { loading: false, error: action.payload }\r\n      case USER_UPDATE_RESET:\r\n        return {\r\n          user: {},\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  }","import {\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS,\r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_CREATE_RESET\r\n  } from '../constants/orderConstants'\r\n  \r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n      case ORDER_CREATE_REQUEST:\r\n        return {\r\n          loading: true,\r\n        }\r\n      case ORDER_CREATE_SUCCESS:\r\n        return {\r\n          loading: false,\r\n          success: true,\r\n          order: action.payload,\r\n        }\r\n      case ORDER_CREATE_FAIL:\r\n        return {\r\n          loading: false,\r\n          error: action.payload,\r\n        }\r\n      case ORDER_CREATE_RESET:\r\n        return {}\r\n      default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = {loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`)\r\n    } else {\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'\r\n      ></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default SearchBox","import axios from 'axios';\r\nimport { USER_DETAILS_FAIL, \r\n        USER_DETAILS_REQUEST, \r\n        USER_DETAILS_SUCCESS, \r\n        USER_LOGIN_FAIL, \r\n        USER_LOGIN_REQUEST, \r\n        USER_LOGIN_SUCCESS, \r\n        USER_LOGOUT, \r\n        USER_REGISTER_FAIL, \r\n        USER_REGISTER_REQUEST, \r\n        USER_REGISTER_SUCCESS, \r\n        USER_UPDATE_PROFILE_FAIL, \r\n        USER_UPDATE_PROFILE_REQUEST, \r\n        USER_UPDATE_PROFILE_SUCCESS,\r\n        USER_DETAILS_RESET, \r\n        USER_LIST_REQUEST,\r\n        USER_LIST_FAIL,\r\n        USER_LIST_SUCCESS,\r\n        USER_LIST_RESET,\r\n        USER_DELETE_REQUEST,\r\n        USER_DELETE_SUCCESS,\r\n        USER_DELETE_FAIL,\r\n        USER_UPDATE_FAIL,\r\n        USER_UPDATE_SUCCESS,\r\n        USER_UPDATE_REQUEST\r\n    } from '../constants/userConstants';\r\n\r\n    import { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = ( email, password ) => async ( dispatch ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n\r\n\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    document.location.href = '/login'\r\n}\r\n\r\n\r\nexport const register = ( name, email, password ) => async ( dispatch ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n\r\n\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type:USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_LIST_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/users`, config)\r\n  \r\n      dispatch({\r\n        type: USER_LIST_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const deletetUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`/api/users/${id}`, config)\r\n  \r\n      dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_DELETE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  export const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: USER_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n  \r\n      dispatch({ type: USER_UPDATE_SUCCESS })\r\n  \r\n      dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: USER_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userAction'\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                <Navbar.Brand>E-Store</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Route render={({ history }) => <SearchBox history={history} />} />\r\n                    <Nav className=\"ml-auto\">\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                    {userInfo ? (   \r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    ) : <LinkContainer to='/login'>\r\n                    <Nav.Link><i className=\"fas fa-user\"></i> Sign In</Nav.Link>\r\n                </LinkContainer>}\r\n                {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n                    </Nav>\r\n            </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar> \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; E-Store\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                value >= 1 \r\n                ? 'fas fa-star' \r\n                : value >= 0.5 \r\n                ? 'fas fa-star-half-alt' \r\n                : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                value >= 2 \r\n                ? 'fas fa-star' \r\n                : value >= 1.5 \r\n                ? 'fas fa-star-half-alt' \r\n                : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                value >= 3 \r\n                ? 'fas fa-star' \r\n                : value >= 2.5 \r\n                ? 'fas fa-star-half-alt' \r\n                : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                value >= 4 \r\n                ? 'fas fa-star' \r\n                : value >= 3.5 \r\n                ? 'fas fa-star-half-alt' \r\n                : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={\r\n                value >= 5 \r\n                ? 'fas fa-star' \r\n                : value >= 4.5 \r\n                ? 'fas fa-star-half-alt' \r\n                : 'far fa-star'}\r\n                ></i>\r\n            </span>\r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color: '#f8e825',\r\n    value: 0,\r\n  };\r\n//Typechecking of props\r\nRating.propTypes = {\r\n    value: PropTypes.number.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ( { product } ) => {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' /> \r\n            </Link>\r\n\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div'>\r\n                    <strong>\r\n                        {product.name}\r\n                    </strong>\r\n                </Card.Title>\r\n            </Link>\r\n\r\n            <Card.Text as='div'>\r\n                <Rating \r\n                    value={product.rating} \r\n                    text={`${product.numReviews} reviews`} \r\n                />\r\n            </Card.Text>\r\n\r\n            <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='grow' role='status' variant='info' style={{ width: '100px', height: '100px', margin:'auto', display: 'block', }}>\r\n            \r\n            <span className='sr-only'>Loading</span>\r\n\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && (\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }\r\n          >\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Paginate","import axios from 'axios';\r\nimport {    PRODUCT_LIST_REQUEST, \r\n            PRODUCT_LIST_SUCCESS, \r\n            PRODUCT_LIST_FAIL, \r\n            PRODUCT_DETAILS_REQUEST, \r\n            PRODUCT_DETAILS_SUCCESS, \r\n            PRODUCT_DETAILS_FAIL, \r\n            PRODUCT_DELETE_REQUEST,\r\n            PRODUCT_DELETE_SUCCESS,\r\n            PRODUCT_DELETE_FAIL,\r\n            PRODUCT_CREATE_REQUEST,\r\n            PRODUCT_CREATE_SUCCESS,\r\n            PRODUCT_CREATE_FAIL,\r\n            PRODUCT_UPDATE_REQUEST,\r\n            PRODUCT_UPDATE_SUCCESS,\r\n            PRODUCT_UPDATE_FAIL,\r\n            PRODUCT_CREATE_REVIEW_REQUEST,\r\n            PRODUCT_CREATE_REVIEW_SUCCESS,\r\n            PRODUCT_CREATE_REVIEW_FAIL,\r\n            PRODUCT_TOP_REQUEST,\r\n            PRODUCT_TOP_SUCCESS,\r\n            PRODUCT_TOP_FAIL} from '../constants/productConstants';\r\n\r\n            export const listProducts = (keyword = '', pageNumber = '') => async (\r\n              dispatch\r\n            ) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(\r\n          `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`/api/products/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_DELETE_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DELETE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(`/api/products`, {}, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/products/${product._id}`,\r\n        product,\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: PRODUCT_UPDATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const createProductReview = (productId, review) => async (\r\n    dispatch,\r\n    getState\r\n  ) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n      dispatch({ type: PRODUCT_TOP_REQUEST })\r\n  \r\n      const { data } = await axios.get(`/api/products/top`)\r\n  \r\n      dispatch({\r\n        type: PRODUCT_TOP_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_TOP_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      })\r\n    }\r\n  }","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated)\r\n  const { loading, error, products } = productTopRated\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts())\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  )\r\n}\r\n\r\nexport default ProductCarousel","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keyword' content={keywords} />\r\n    </Helmet>\r\n  )\r\n}\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome To ProShop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electroincs',\r\n}\r\n\r\nexport default Meta","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\nimport { listProducts } from '../actions/productActions'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword\r\n\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber))\r\n  }, [dispatch, keyword, pageNumber])\r\n\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomeScreen","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Meta from '../components/Meta'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport {\r\n    listProductDetails,\r\n    createProductReview,\r\n  } from '../actions/productActions'\r\n  import { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductScreen = ( { history, match } ) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const {\r\n        success: successProductReview,\r\n        error: errorProductReview,\r\n    } = productReviewCreate\r\n\r\n    useEffect( () => {\r\n        if (successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n          }\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview] )\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(\r\n          createProductReview(match.params.id, {\r\n            rating,\r\n            comment,\r\n          })\r\n        )\r\n      }\r\n\r\n\r\n    return (\r\n        <>\r\n         <Link className='btn btn-light my-3' to='/'>Go Back</Link>\r\n         { loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n              <Col md={6}>\r\n                <Image src={product.image} alt={product.name} fluid />\r\n              </Col>\r\n              <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                        <h3>{product.name}</h3>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Rating\r\n                            value={product.rating}\r\n                            text={`${product.numReviews} reviews`}\r\n                        />\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        Description: {product.description}\r\n                        </ListGroup.Item>\r\n                        </ListGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                <Col>Price:</Col>\r\n                                <Col>\r\n                                    <strong>${product.price}</strong>\r\n                                </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Status</Col>\r\n                                    <Col>\r\n                                    {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {product.countInStock > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control\r\n                            as='select'\r\n                            value={qty}\r\n                            onChange={(e) => setQty(e.target.value)}\r\n                          >\r\n                            {[...Array(product.countInStock).keys()].map(\r\n                              (x) => (\r\n                                <option key={x + 1} value={x + 1}>\r\n                                  {x + 1}\r\n                                </option>\r\n                              )\r\n                            )}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      onClick={addToCartHandler}\r\n                      className='btn-block'\r\n                      type='button'\r\n                      disabled={product.countInStock === 0}\r\n                    >\r\n                            Add To Cart\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                    <h2>Reviews</h2>\r\n                    {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                    <ListGroup variant='flush'>\r\n                        {product.reviews.map((review) => (\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} />\r\n                            <p>{review.createdAt.substring(0, 10)}</p>\r\n                            <p>{review.comment}</p>\r\n                        </ListGroup.Item>\r\n                        ))}\r\n                        <ListGroup.Item>\r\n                        <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}\r\n                        >\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) => setComment(e.target.value)}\r\n                        ></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                    </Message>\r\n                  )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    </Col>\r\n          </Row>\r\n        </>\r\n         ) }\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n  const { cartItems } = cart\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty))\r\n    }\r\n  }, [dispatch, productId, qty])\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id))\r\n  }\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping')\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty <Link to='/'>Go Back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) =>\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        )\r\n                      }\r\n                    >\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}\r\n              >\r\n                Proceed To Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default CartScreen","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { login } from '../actions/userAction';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Sign In\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : `/register`}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userAction';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        //dispatch register\r\n        if(password !== confirmPassword) {\r\n            setMessage('Passwords do not match!') \r\n        } else {\r\n        dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter Name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter Email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter Password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm Password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Existing Customer? <Link to={redirect ? `/login?redirect=${redirect}` : `/login`}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userAction'\r\nimport{ listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\r\n  const { success } = userUpdateProfile\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy)\r\n  const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    } else {\r\n      if (!user || !user.name || success) {\r\n          dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n          dispatch(getUserDetails('profile'))\r\n          dispatch(listMyOrders())\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match')\r\n    } else {\r\n        //dispatch update user\r\n        dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated!</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='Enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='Enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map(order => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (\r\n                    <i className='fas fa-times' style={{color: 'red'}}></i>\r\n                  )}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order._id}`}>\r\n                      <Button className='btn-sm' variant='light'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default ProfileScreen","import axios from 'axios'\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\nimport {\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch({\r\n      type: CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    })\r\n    localStorage.removeItem('cartItems')\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n    dispatch({\r\n      type: ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.get(`/api/orders`, config)\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Sign In</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Shipping</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Payment</Nav.Link>}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ): <Nav.Link disabled>Place Order</Nav.Link>}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='address'>\r\n                        <Form.Label>Address</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter Address' value={address} required onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                        <Form.Label>City</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter City' value={city} required onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                        <Form.Label>Postal Code</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter Postal Code' value={postalCode} required onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                        <Form.Label>Country</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter Country' value={country} required onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [ paymentMethod, setPaymentMethod ] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                <Col>\r\n                    <Form.Check \r\n                        type='radio' \r\n                        label='PayPal or Credit Card' \r\n                        id='PayPal' \r\n                        name='paymentMethod' \r\n                        value='PayPal' \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check>\r\n                    {/* <Form.Check \r\n                        type='radio' \r\n                        label='Stripe' \r\n                        id='Stripe' \r\n                        name='paymentMethod' \r\n                        value='Stripe' \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check> */}\r\n                    {/*Add razorpay too*/}\r\n                    {/* <Form.Check \r\n                        type='radio' \r\n                        label='Cash on Delivery' \r\n                        id='COD' \r\n                        name='paymentMethod' \r\n                        value='Cash on Delivery' \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                    </Form.Check> */}\r\n                    {/* Add more check methods for more payments  */}\r\n                </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const cart = useSelector((state) => state.cart)\r\n\r\n  //   Calculate prices\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2)\r\n  }\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  )\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2)\r\n\r\n  const orderCreate = useSelector(state => state.orderCreate)\r\n  const { order, success, error } = orderCreate\r\n\r\n  useEffect(() => {\r\n    if(success) {\r\n      history.push(`/order/${order._id}`)\r\n      dispatch({ type: ORDER_CREATE_RESET })\r\n    }\r\n    // eslint-disable-next-line\r\n  },[history, success])\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(createOrder({\r\n      orderItems: cart.cartItems,\r\n      shippingAddress: cart.shippingAddress,\r\n      paymentMethod: cart.paymentMethod,\r\n      itemsPrice: cart.itemsPrice,\r\n      shippingPrice: cart.shippingPrice,\r\n      taxPrice: cart.taxPrice,\r\n      totalPrice: cart.totalPrice,\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                  </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}\r\n                >\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlaceOrderScreen","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions'\r\nimport {\r\n  ORDER_PAY_RESET,\r\n  ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const [sdkReady, setSdkReady] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const orderPay = useSelector((state) => state.orderPay)\r\n  const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n  const orderDeliver = useSelector((state) => state.orderDeliver)\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login')\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal')\r\n      const script = document.createElement('script')\r\n      script.type = 'text/javascript'\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n      script.async = true\r\n      script.onload = () => {\r\n        setSdkReady(true)\r\n      }\r\n      document.body.appendChild(script)\r\n    }\r\n\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET })\r\n      dispatch({ type: ORDER_DELIVER_RESET })\r\n      dispatch(getOrderDetails(orderId))\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript()\r\n      } else {\r\n        setSdkReady(true)\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, successDeliver, order, userInfo, history]) \r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult)\r\n    dispatch(payOrder(orderId, paymentResult))\r\n  }\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>{' '}\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? <Loader /> : (\r\n                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                  )}\r\n\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    type='button'\r\n                    className='btn btn-block'\r\n                    onClick={deliverHandler}\r\n                  >\r\n                    Mark As Delivered\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { deletetUser, listUsers } from '../actions/userAction'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const userList = useSelector((state) => state.userList)\r\n  const { loading, error, users } = userList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const userDelete = useSelector((state) => state.userDelete)\r\n  const { success:successDelete } = userDelete\r\n\r\n  useEffect(() => {\r\n      if(userInfo && userInfo.isAdmin) {\r\n        dispatch(listUsers())\r\n      } else {\r\n          history.push('/login')\r\n      }\r\n  }, [dispatch, history, successDelete, userInfo])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure?')){\r\n      dispatch(deletetUser(id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}\r\n                  >\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserListScreen","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userAction'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const userDetails = useSelector((state) => state.userDetails)\r\n  const { loading, error, user } = userDetails\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET })\r\n      history.push('/admin/userlist')\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        dispatch(getUserDetails(userId))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n        setIsAdmin(user.isAdmin)\r\n      }\r\n    }\r\n  }, [dispatch, history, userId, user, successUpdate])\r\n\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='Enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setIsAdmin(e.target.checked)}\r\n              ></Form.Check>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch()\r\n  const pageNumber = match.params.pageNumber || 1\r\n\r\n  const productList = useSelector((state) => state.productList)\r\n  const { loading, error, products, page, pages } = productList\r\n\r\n  const productDelete = useSelector((state) => state.productDelete)\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete\r\n\r\n  const productCreate = useSelector((state) => state.productCreate)\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET })\r\n    if (!userInfo.isAdmin) {\r\n      history.push('/login')\r\n    }\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`)\r\n    } else {\r\n      dispatch(listProducts('', pageNumber))\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber\r\n  ])\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id))\r\n    }\r\n  }\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n              </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductListScreen","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id\r\n\r\n  const [name, setName] = useState('')\r\n  const [price, setPrice] = useState(0)\r\n  const [image, setImage] = useState('')\r\n  const [brand, setBrand] = useState('')\r\n  const [category, setCategory] = useState('')\r\n  const [countInStock, setCountInStock] = useState(0)\r\n  const [description, setDescription] = useState('')\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const { loading, error, product } = productDetails\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET })\r\n      history.push('/admin/productlist')\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId))\r\n      } else {\r\n        setName(product.name)\r\n        setPrice(product.price)\r\n        setImage(product.image)\r\n        setBrand(product.brand)\r\n        setCategory(product.category)\r\n        setCountInStock(product.countInSock)\r\n        setDescription(product.description)\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate])\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append('image', file)\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      console.error(error)\r\n      setUploading(false)\r\n    }\r\n  }\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n              ></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}\r\n              ></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='Enter countInStock'\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const orderList = useSelector((state) => state.orderList)\r\n  const { loading, error, orders } = orderList\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders())\r\n    } else {\r\n      history.push('/login')\r\n    }\r\n  }, [dispatch, history, userInfo])\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order._id}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from \"./screens/HomeScreen\";\nimport ProductScreen from \"./screens/ProductScreen\";\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\nconst App = () => {\n  return (\n    <Router>\n    <Header />\n    <main className='py-3'>\n      <Container>\n        <Route path='/order/:id' component={OrderScreen} />\n        <Route path='/shipping' component={ShippingScreen} />\n        <Route path='/payment' component={PaymentScreen} />\n        <Route path='/placeorder' component={PlaceOrderScreen} />\n        <Route path='/login' component={LoginScreen} />\n        <Route path='/register' component={RegisterScreen} />\n        <Route path='/profile' component={ProfileScreen} />\n        <Route path='/product/:id' component={ProductScreen} />\n        <Route path='/cart/:id?' component={CartScreen} />\n        <Route path='/admin/userlist' component={UserListScreen} />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n        <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n        <Route path='/admin/orderlist' component={OrderListScreen} />\n        <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n        <Route path='/' component={HomeScreen} exact />\n      </Container>\n    </main> \n    <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store ={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}